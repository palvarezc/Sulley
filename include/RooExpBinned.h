/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOEXPBINNED
#define ROOEXPBINNED

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
#include "TF1.h"
#include "TH1D.h"
#include "RooAbsBinning.h"

class RooExpBinned : public RooAbsPdf {
public:
  RooExpBinned() {} ; 
  RooExpBinned(const char *name, const char *title,
                           RooAbsReal& _m,
                           RooAbsReal& _l1,
                           RooAbsBinning& _m_binning);
  RooExpBinned(const RooExpBinned& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooExpBinned(*this,newname); }
  inline virtual ~RooExpBinned() { 
    // delete grid;
  }

protected:

  RooRealProxy m ;
  RooRealProxy l1 ;
  Int_t m_nbins;
  Double_t m_lowBound;
  Double_t m_highBound;
 

  TH1D *grid;
  
  double_t evaluate() const ;

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const;
  Double_t analyticalIntegral(Int_t code, const char* rangeName) const;


private:

  //ClassDef(RooExpBinned,1) // Your description goes here...
};
 
#endif
