/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOEXPOFPOLYTIMESX
#define ROOEXPOFPOLYTIMESX

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class RooExpOfPolyTimesX : public RooAbsPdf {
public:
  RooExpOfPolyTimesX() {} ; 
  RooExpOfPolyTimesX(const char *name, const char *title,
	      RooAbsReal& _m,
	      RooAbsReal& _pT,
	      RooAbsReal& _l1,
	      RooAbsReal& _l2,
	      RooAbsReal& _l3,
	      RooAbsReal& _l4,
	      RooAbsReal& _l5);
  RooExpOfPolyTimesX(const RooExpOfPolyTimesX& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooExpOfPolyTimesX(*this,newname); }
  inline virtual ~RooExpOfPolyTimesX() { }

protected:

  RooRealProxy m ;
  RooRealProxy pT ;
  RooRealProxy l1 ;
  RooRealProxy l2 ;
  RooRealProxy l3 ;
  RooRealProxy l4 ;
  RooRealProxy l5 ;
  
  Double_t evaluate() const ;

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName) const;
  Double_t analyticalIntegral(Int_t code, const char* rangeName) const;


private:

//  ClassDef(RooExpOfPolyTimesX,1) // Your description goes here...
};
 
#endif
